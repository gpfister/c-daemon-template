#
# gp-c-daemon-template
# Copyright © 2024, Greg PFISTER. MIT License.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the “Software”), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

name: Publish

on:
  workflow_call:
    inputs:
      ghRef:
        description: The GitHub ref associated to the release (/refs/tags/<TAG>)
        type: string
        required: true

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/gp-devenv/gp-base-devenv:24.04-1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache builds
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-build-${{ github.sha }}
          path: |
            ./build
      - name: Check files
        run: |
          ls -la ./build
      - name: Upload executables
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const tag = process.env.GH_REF.replace("refs/tags/", "");
            console.info("Uploading for tag: " + tag);
            const release = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner, 
              repo: context.repo.repo, 
              tag: tag
            });
            console.info("Uploading for release: " + release.data.id);
            const uploadFilename = "template";
            const sourceFilePath = "./build/template;
            console.info("Uploading " + sourceFilePath + " as " + uploadFilename);
            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner, 
              repo: context.repo.repo, 
              release_id: release.data.id,
              name: uploadFilename,
              data: fs.readFileSync(sourceFilePath)
            });

# End